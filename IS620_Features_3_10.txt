--Feature 3______________________________________________________________________________________SHUBHI SHRIVASTAVA____________
CREATE OR replace PROCEDURE add_test(p_id     INT, 
                                     testdate DATE, 
                                     t_result INT) 
IS 
  v_count1 INT; 
  v_count2 INT; 
  v_tdate  DATE; 
BEGIN 
    SELECT Count(*) 
    INTO   v_count1 
    FROM   person 
    WHERE  pid = p_id; 

    IF v_count1 = 0 THEN 
      dbms_output.Put_line('No such person'); 
    ELSE 
      dbms_output.Put_line('Person exists'); 

      SELECT Count(*) 
      INTO   v_count2 
      FROM   tests 
      WHERE  pid = p_id 
             AND t_date <= testdate; 

      IF v_count2 = 0 THEN 
        dbms_output.Put_line('No existing test'); 
        INSERT INTO tests VALUES( test_sequence.nextval, p_id, testdate, t_result); 
      ELSE 
        dbms_output.Put_line('test row exists for person'); 

        SELECT Max(t_date) 
        INTO   v_tdate 
        FROM   tests 
        WHERE  pid = p_id and v_tdate <=testdate; 

        IF v_tdate = testdate THEN 
          UPDATE tests 
          SET    res = t_result 
          WHERE  pid = p_id 
                 AND v_tdate = testdate; 
        ELSE 
          UPDATE person 
          SET    status = t_result 
          WHERE  pid = p_id 
                 AND v_tdate < testdate; 
        END IF; 
      END IF; 
    END IF; 
    EXCEPTION 
        WHEN no_data_found THEN
            dbms_output.put_line('No such person!');
        WHEN too_many_rows THEN
            dbms_output.put_line('Too many rows!');
END; 


--Testing
set serveroutput ON 
select * from Tests;
select * from person;
--invalid id 
exec add_test(1000, DATE '2020-08-08', 0); 
--no existing test for newly added person 
INSERT INTO person 
VALUES     (30, 
            1,  
            'Harry', 
            '6672321002', 
            0); 

exec add_test(30, DATE '2020-08-08', 1); 
SELECT * FROM   person; --to check the inserted row
SELECT * FROM   tests; --to check the inserted row

--normal cases-- test exists 
exec add_test(16, DATE '2020-10-08', 1); 
SELECT * FROM   person;  
SELECT * FROM   tests;



--Feature 10______________________________________________________________________________________SHUBHI SHRIVASTAVA____________

CREATE OR replace PROCEDURE print_stats(x interval day TO second) 
IS 
  CURSOR c1 IS 
    SELECT DISTINCT count(*) AS c, 
                    zip 
    FROM            houses h, 
                    person p 
    WHERE           p.hid = h.hid 
    AND             p.status = 1 
    GROUP BY        zip; 

CURSOR c3 IS 
  SELECT   count(DISTINCT t.pid) AS ct, 
           zip 
  FROM     tests t, 
           person p, 
           houses h 
  WHERE    t.pid = p.pid 
  AND      p.hid = h.hid 
  AND      t.res=1 
  GROUP BY zip; 

v_part2 INT; 
BEGIN 
  dbms_output.Put_line('Part 1) '); 
  dbms_output.Put_line('Total number of people who has positive status in the database, and number of such people in each zip code:');
  FOR r IN c1 
  LOOP 
    dbms_output.Put_line('zip :' 
    || r.zip 
    ||' count : ' 
    || r.c); 
  END LOOP; 
  
  dbms_output.Put_line('Part 2)'); 
  dbms_output.Put_line('Total number of distinctive people tested positive in the given days'); 
  SELECT count(DISTINCT t1.pid) 
  INTO   v_part2 
  FROM   tests t1, 
         tests t2, 
         person p 
  WHERE  t1.pid = p.pid 
  AND    t1.res=1 
  AND    t1.t_date <= t2.t_date+x 
  AND    t1.t_date > t2.t_date; 
   
  dbms_output.Put_line(v_part2); 
  
  dbms_output.Put_line('Part 3) '); 
  dbms_output.Put_line('Accumulated number of people tested positive in each zip code');

  FOR r IN c3 
  LOOP
    dbms_output.Put_line('zip :' || r.zip ||' count : ' || r.ct); 
  END LOOP; 
END; 
--testing 
SET serveroutput ON 
EXEC print_stats(interval '3' day);