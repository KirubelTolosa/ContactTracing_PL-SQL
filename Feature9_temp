--Feature9:
CREATE OR REPLACE PROCEDURE Feature_9 (
input_pid1 in int,
D1 in date,
X1 interval Day TO SECOND,
Y1 interval Day TO SECOND)
IS
perid_exists int;

BEGIN
select count(*) into perid_exists from Tests T where pid = input_pid1 and t_date = D1 and res = 1;
dbms_output.put_line(perid_exists);

--check if a person already exists with same pid and tested positive on input date
IF perid_exists = 1 THEN
    Feature_9_sub(input_pid1,D1,X1,Y1);
ELSE
	dbms_output.put_line('Please enter valid input Person ID and Date!!!');	

END IF;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
    dbms_output.put_line('No data found: Please check the inputs!');
END;

/

SET SERVEROUTPUT ON;
exec Feature_9(16,date '2020-08-08',interval'20' day,interval'20' day);

--------------------------------------------------------------------------
-----------------step2,3,4,5--------------------------------------------
CREATE OR REPLACE PROCEDURE Feature_9_sub (
input_pid in int,
D in date,
X in interval Day TO SECOND,
Y in interval Day TO SECOND
)
IS
CURSOR C1 IS 
	select p.p_name from person p, person p1 where p1.pid = input_pid and p.hid = p1.hid and p.pid != p1.pid;
	
CURSOR C2 IS
	select p.p_name from person_event pe1,person_event pe2,events e,person p where pe1.eid= pe2.eid and e.eid=pe1.eid and p.pid=pe1.pid and pe1.pid<>pe2.pid and pe2.pid = 11 and e.e_date BETWEEN D-X AND D;
	
CURSOR C3 IS
	select p.p_name from person_flight pf1,person_flight pf2,flights f,person p where pf1.fid= pf2.fid and f.fid=pf1.fid and p.pid=pf1.pid and pf1.pid<>pf2.pid and pf2.pid = 11 and f.f_date BETWEEN D-X AND D;
	
TYPE c_list1 IS TABLE of Person.p_name%type INDEX BY binary_integer;
name_list1 c_list1;
counter1 integer :=0;

TYPE c_list2 IS TABLE of Person.p_name%type INDEX BY binary_integer;
name_list2 c_list2;
counter2 integer :=0;

TYPE c_list3 IS TABLE of Person.p_name%type INDEX BY binary_integer;
name_list3 c_list3;
counter3 integer :=0;

temp_res Tests.res%type;
test_date Tests.t_date%type;
input_pid_temp Person.pid%type;
i1 int :=0 ;
i2 int :=0 ;
i3 int :=0 ;

BEGIN
--finding close contact
--a_same house(feature2)

   FOR n IN C1 LOOP
		name_list1(counter1) := n.p_name;
        --check B's test date must > A's test date
        select t_date,res into test_date,temp_res from Tests where pid = (select pid from Person where p_name = name_list1(counter1)) and ROWNUM =1 order by t_date;
        IF D < test_date and test_date < D+Y and temp_res=1 THEN
            dbms_output.put_line('Close Contact(' ||counter1|| '):' ||name_list1(counter1));
            dbms_output.put_line('The reason is person ' || name_list1(counter1) || ' lives in same house as person with id '|| input_pid || ' and test date is: ' || test_date);
        END IF;  
        counter1 := counter1 +1;
	END LOOP;

--b_same event(feature6)
   FOR n IN C2 LOOP
		counter2 := counter2 +1;
		name_list2(counter2) := n.p_name;
        --check B's test date must > A's test date
        select t_date,res into test_date,temp_res from Tests where pid = (select pid from Person where p_name = name_list2(counter2))and ROWNUM =1 order by t_date;
        IF D < test_date and test_date < D+Y and temp_res=1 THEN
            dbms_output.put_line('Close Contact(' ||counter2|| '):' ||name_list2(counter2));
            dbms_output.put_line('The reason is person' || name_list2(counter2) || 'attended same event as person with id '|| input_pid || ' and test date is: ' || test_date);
        END IF;
	END LOOP;

--c_same flight(feature4)
   FOR n IN C3 LOOP
		counter3 := counter3 +1;
		name_list3(counter3) := n.p_name;
        --check B's test date must > A's test date
        select t_date,res into test_date,temp_res from Tests where pid = (select pid from Person where p_name = name_list3(counter3))and ROWNUM =1 order by t_date;
        IF D < test_date and test_date < D+Y and temp_res=1 THEN
            dbms_output.put_line('Close Contact(' ||counter3|| '):' ||name_list3(counter3));
            dbms_output.put_line('The reason is person' || name_list3(counter3) || 'lives travelled on same flight as person with id '|| input_pid || ' and test date is: ' || test_date);
        END IF;	
    END LOOP;

FOR i1 in 1..len(name_list1)
LOOP
    select pid into input_pid_temp from Person where p_name = name_list1(i1);
    dbms_output.put_line(input_pid_temp);
	Feature_9_sub(input_pid_temp,test_date,X,Y);
END LOOP;

FOR i2 in 1..len(name_list2)
LOOP
    select pid into input_pid_temp from Person where p_name = name_list1(i2);
    dbms_output.put_line(input_pid_temp);
	Feature_9_sub(input_pid_temp,test_date,X,Y);
END LOOP;

FOR i3 in 1..len(name_list3)
LOOP
    select pid into input_pid_temp from Person where p_name = name_list1(i3);
    dbms_output.put_line(input_pid_temp);
	Feature_9_sub(input_pid_temp,test_date,X,Y);
END LOOP;

EXCEPTION
	WHEN NO_DATA_FOUND THEN
    dbms_output.put_line('The transmission chain ends here....No more persons affected!');
END;


/

SET SERVEROUTPUT ON;
exec Feature_9_sub(16,date '2020-08-08',interval'20' day,interval'20' day);
